(function(){"use strict";var __webpack_modules__={153:function(){eval('\n;// CONCATENATED MODULE: ./public/config.json\nvar config_namespaceObject = JSON.parse(\'{"loader":{"timout":{"timming_timout":4160,"timming_timout_quick":1386}},"game":{"people_choice":false,"timeoutPeople":{"select":false}}}\');\n;// CONCATENATED MODULE: ./public/JS/Loader.mjs\nconst createAndDestroyLoader = duree => {\n  const Loader = document.getElementById("loader");\n  const loading = document.createElement(\'P\');\n  const loadElt = ["l", "o", "a", "d", "i", "n", "g"];\n  Loader.classList.add(\'Loader_container\');\n  loadElt.forEach(elt => {\n    const loadEltSpan = document.createElement("SPAN");\n    loadEltSpan.textContent = elt;\n    loadEltSpan.classList.add(\'loadElt\');\n    loading.appendChild(loadEltSpan);\n  });\n  Loader.appendChild(loading);\n  const timeout = setTimeout(() => {\n    Loader.remove();\n  }, duree);\n  return () => {\n    clearTimeout(timeout);\n  };\n};\n/* harmony default export */ var Loader = (createAndDestroyLoader);\n;// CONCATENATED MODULE: ./public/JS/gameFonctions/gameFonctions.mjs\n/**\r\n * Cette fonction permet aux utilisateurs de sélectionner une personne dans une liste d\'images et d\'afficher leur nom et leur image.\r\n *\r\n * @param {HTMLImageElement} elt - L\'élément image sur lequel l\'utilisateur clique pour sélectionner une personne.\r\n * @param {HTMLUListElement} parent - L\'élément parent où les informations de la personne sélectionnée sont affichées.\r\n * @param {JSON} config - Un objet de configuration contenant les paramètres de jeu.\r\n */\nconst selectPeople = (elt, parent, config) => {\n  elt.addEventListener(\'click\', item => {\n    if (config.game.timeoutPeople.select) {\n      return;\n    }\n    if (!config.game.people_choice) {\n      const urlImgChoice = item.target.src;\n      const containerImageChoice = document.createElement(\'DIV\');\n      const backgroudImage = document.createElement(\'DIV\');\n      const arrow = document.createElement(\'BUTTON\');\n      const imageChoice = document.createElement(\'IMG\');\n      const name = document.createElement(\'P\');\n      arrow.textContent = \'<\';\n      backgroudImage.classList.add(\'border-l-grad-img\');\n      arrow.classList.add(\'btn_show_people_choice\');\n      containerImageChoice.classList.add(\'container-img-choice\');\n      name.classList.add(\'name-select_people\');\n      imageChoice.src = urlImgChoice;\n      if (elt.src.includes(\'localhost\')) {\n        name.textContent = elt.src.replaceAll("http://localhost:437/", "").replaceAll(\'.webp\', \'\');\n      } else {\n        name.textContent = elt.src.split(".com/")[1].replaceAll(\'.webp\', \'\');\n      }\n      containerImageChoice.appendChild(arrow);\n      backgroudImage.appendChild(imageChoice);\n      containerImageChoice.appendChild(backgroudImage);\n      containerImageChoice.appendChild(name);\n      parent.appendChild(containerImageChoice);\n      showPeopleToggle(arrow, containerImageChoice);\n      config.game.people_choice = !config.game.people_choice;\n      return;\n    }\n    elt.classList.toggle("people_down");\n    config.game.timeoutPeople.select = true;\n    const timout = setTimeout(() => {\n      config.game.timeoutPeople.select = false;\n    }, 350);\n    return () => {\n      clearTimeout(timout);\n    };\n  });\n};\n/**\r\n   * Cette fonction permet de basculer la visibilité d\'un élément de conteneur lorsqu\'un bouton est cliqué.\r\n   *\r\n   * @param {arrow} elt - bouton qui ouvre et ferme la fenetre de visualisation de la star choisie\r\n   * @param {HTMLDivElement} container - L\'élément de conteneur dont la visibilité doit être basculée.\r\n*/\nconst showPeopleToggle = (elt, container) => {\n  elt.addEventListener(\'click\', e => {\n    elt.classList.toggle(\'arow_revers\');\n    container.classList.toggle(\'show_selected_people\');\n  });\n};\n/* harmony default export */ var gameFonctions = (selectPeople);\n;// CONCATENATED MODULE: ./public/JS/gameFonctions/gameStart.mjs\n\nconst createGameBoard = (parent, name, srcImg, config) => {\n  const UL_listPeoples = document.createElement("UL");\n  for (let i = 0; i < 24; i++) {\n    const LI_people = document.createElement("LI");\n    const DIV_containerInLI = document.createElement("DIV");\n    const PeopleIMG = document.createElement("IMG");\n    const peopleName = document.createElement("P");\n    PeopleIMG.classList.add("people_img");\n    DIV_containerInLI.classList.add("people_container");\n    LI_people.classList.add(\'people\');\n    LI_people.classList.add(`people_${i}`);\n    peopleName.classList.add(\'name_people\');\n    PeopleIMG.src = srcImg[i];\n    peopleName.textContent = `${name[i]}`;\n\n    // voir pour faire passer le nom en plus car en faisant passer juste l image et en recuperant le nom par raport a l URL bug sur les charactères spéciaux\n    gameFonctions(PeopleIMG, UL_listPeoples, config);\n    DIV_containerInLI.appendChild(PeopleIMG);\n    DIV_containerInLI.appendChild(peopleName);\n    LI_people.appendChild(DIV_containerInLI);\n    UL_listPeoples.appendChild(LI_people);\n  }\n  UL_listPeoples.classList.add("list_peoples");\n  parent.appendChild(UL_listPeoples);\n};\n/* harmony default export */ var gameStart = (createGameBoard);\n;// CONCATENATED MODULE: ./public/JS/index.mjs\n// import * as configJson from \'../config.json\' assert {type:\'json\'}\n\n\n\n\nconst HOST = location.origin.replace(/^http/, \'ws\');\nconst ws = new WebSocket(`${HOST}/ws`); // `${HOST}/ws`\n// console.log(ws.url)\nconst game = document.getElementById("Game");\nconst resetBtn = document.getElementById("resetBtn");\nconst menuPrincipal = document.getElementById("menuP");\nconst createGameBtn = document.getElementById("createGame");\nconst config = config_namespaceObject;\nconst createServer = document.getElementById("createServer");\nif (!sessionStorage.getItem("reload")) {\n  sessionStorage.setItem(\'reload\', false);\n}\nwindow.onload = () => {\n  userConnectWS();\n  const reloadLS = sessionStorage.getItem("reload");\n  if (reloadLS === \'false\') {\n    // if first load page in session execute loader 3 times\n    //      It\'s only for style, if you want remplace conditional by: \n    Loader(config.loader.timout.timming_timout);\n  } else {\n    // else execute loader 1 times\n    Loader(config.loader.timout.timming_timout_quick);\n  }\n};\nconst userConnectWS = () => {\n  const user = {\n    name: "test",\n    host: "false"\n  };\n  ws.send(\'userData\', user);\n  ws.onclose = () => {\n    console.log(\'WebSocket closed\');\n    ws.close();\n  };\n};\n// Reset la page\nresetBtn.addEventListener(\'click\', () => {\n  document.location.reload();\n  sessionStorage.setItem("reload", true);\n});\n// BTN create demo game, launch the demo verion\ncreateGameBtn.addEventListener(\'click\', e => {\n  ws.send(\'getGameData\');\n  ws.addEventListener(\'message\', async event => {\n    const data = JSON.parse(event.data);\n    const srcImg = data.map(e => e.name);\n    const name = data.map(e => e.name.replaceAll(\'.webp\', ""));\n    menuPrincipal.remove();\n    gameStart(game, name, srcImg, config);\n  });\n  ws.onclose = () => {\n    console.log(\'WebSocket closed\');\n    ws.close();\n  };\n});\ncreateServer.addEventListener(\'click\', e => {\n  const formContainer = document.createElement(\'div\');\n  const formCreateServ = document.createElement(\'form\');\n  const close = document.createElement("button");\n  formContainer.classList.add("containerFormCreateServ");\n  formCreateServ.classList.add("formCreateServ");\n  close.classList.add("closeBtn");\n  close.textContent = "X";\n  closeBtn(close, formContainer);\n  createInputLab(formCreateServ, "text", "nom du serveur");\n  createInputLab(formCreateServ, "password", "mot de passe");\n  formContainer.appendChild(formCreateServ);\n  formContainer.appendChild(close);\n  game.appendChild(formContainer);\n});\nconst closeBtn = (btn, del) => {\n  btn.addEventListener(\'click\', () => {\n    del.remove();\n  });\n};\nconst createInputLab = (parent, type, name) => {\n  const input = document.createElement("input");\n  const label = document.createElement("label");\n  input.type = type;\n  input.name = name;\n  label.htmlFor = name;\n  label.textContent = name;\n  parent.appendChild(label);\n  parent.appendChild(input);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///153\n')}},__webpack_exports__={};__webpack_modules__[153]()})();